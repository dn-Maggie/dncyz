<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongnao.workbench.finance.dao.AccountOperateIncomeMapper">
	<resultMap id="BaseResultMap" type="com.dongnao.workbench.finance.model.AccountOperateIncome">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="DATE" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="orgin_price" property="orginPrice" jdbcType="DECIMAL" />
		<result column="discount_price" property="discountPrice" jdbcType="DECIMAL" />
		<result column="after_discount_price" property="afterDiscountPrice" jdbcType="DECIMAL" />
		<result column="actual_price" property="actualPrice" jdbcType="DECIMAL" />
		<result column="order_distribution_charge" property="orderDistributionCharge" jdbcType="DECIMAL" />
		<result column="platform_distribution_charge" property="platformDistributionCharge" jdbcType="DECIMAL" />
		<result column="cyz_distribution_charge" property="cyzDistributionCharge" jdbcType="DECIMAL" />
		<result column="invalid_num" property="invalidNum" jdbcType="INTEGER" />
		<result column="valid_num" property="validNum" jdbcType="INTEGER" />
		<result column="product_sale_amount" property="productSaleAmount" jdbcType="DECIMAL" />
		<result column="amount_receivable" property="amountReceivable" jdbcType="DECIMAL" />
		<result column="seventyP_product_sale_amount" property="seventypProductSaleAmount" jdbcType="DECIMAL" />
		<result column="discount_back_commission" property="discountBackCommission" jdbcType="DECIMAL" />
		<result column="amount_payable" property="amountPayable" jdbcType="DECIMAL" />
		<result column="cyz_service_charge" property="cyzServiceCharge" jdbcType="DECIMAL" />
		<result column="cyz_activities_charge" property="cyzActivitiesCharge" jdbcType="DECIMAL" />
		<result column="cyz_all_income" property="cyzAllIncome" jdbcType="DECIMAL" />
		<result column="sale_gross_profit" property="saleGrossProfit" jdbcType="DECIMAL" />
		<result column="sale_gross_profit_rate" property="saleGrossProfitRate" jdbcType="VARCHAR" />
		<result column="distribution_actual_payment" property="distributionActualPayment" jdbcType="DECIMAL" />
		<result column="platform_activities_charge" property="platformActivitiesCharge" jdbcType="DECIMAL" />
		<result column="platform_service_charge" property="platformServiceCharge" jdbcType="DECIMAL" />
		<result column="should_distribution_charge" property="shouldDistributionCharge" jdbcType="DECIMAL" />
		<result column="cyz_distribution_charge_actual" property="cyzDistributionChargeActual" jdbcType="DECIMAL" />
		<result column="diff_distribution_charge" property="diffDistributionCharge" jdbcType="DECIMAL" />
		<result column="platform_subsidy" property="platformSubsidy" jdbcType="DECIMAL" />
		<result column="platform_type" property="platformType" jdbcType="VARCHAR" />
		<result column="store_id" property="storeId" jdbcType="VARCHAR" />
		<result column="store_name" property="storeName" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="AllResultMap" type="com.dongnao.workbench.finance.model.TotalOperateIncome">
		<result column="create_date" property="createDate" jdbcType="DATE" />
		<result column="allinvalid_num" property="allinvalidNum" jdbcType="INTEGER" />
		<result column="allvalid_num" property="allvalidNum" jdbcType="INTEGER" />
	
		<result column="allorgin_price" property="allorginPrice" jdbcType="DECIMAL" />
		<result column="allorder_distribution_charge" property="allorderDistributionCharge" jdbcType="DECIMAL" />
		
		<result column="allgoods_quality" property="allgoodsQuality" jdbcType="INTEGER" />
		<result column="allbase_price" property="allbasePrice" jdbcType="DECIMAL" />
		<result column="allother_base_price" property="allotherBasePrice" jdbcType="DECIMAL" />
		
		<result column="allplatform_service_charge" property="allplatformServiceCharge" jdbcType="DECIMAL" />
		<result column="allplatform_dist_charge" property="allplatformDistCharge" jdbcType="DECIMAL" />
		
		<result column="allplatform_activities_charge" property="allplatformActivitiesCharge" jdbcType="DECIMAL" />
		
		<result column="allproduct_sale_amount" property="allproductSaleAmount" jdbcType="DECIMAL" />
		
		<result column="allcyz_activities_charge" property="allcyzActivitiesCharge" jdbcType="DECIMAL" />
		<result column="allcyz_distribution_charge" property="allcyzDistributionCharge" jdbcType="DECIMAL" />
		
		<result column="allamount_receivable" property="allamountReceivable" jdbcType="DECIMAL" />
		<result column="allamount_payable" property="allamountPayable" jdbcType="DECIMAL" />
		<result column="allcyz_service_charge" property="allcyzServiceCharge" jdbcType="DECIMAL" />
		<result column="allsale_gross_profit" property="allsaleGrossProfit" jdbcType="DECIMAL" />
		<result column="allactual_merchant_dist_charge" property="allactualMerchantDistCharge" jdbcType="DECIMAL" />
		<result column="dist_price" property="distPrice" jdbcType="DECIMAL" />
		<result column="platform_type" property="platformType" jdbcType="VARCHAR" />
		<result column="store_id" property="storeId" jdbcType="VARCHAR" />
		<result column="store_name" property="storeName" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
						 	id
							,create_date
							,create_time
							,order_no
							,orgin_price
							,discount_price
							,after_discount_price
							,actual_price
							,order_distribution_charge
							,platform_distribution_charge
							,cyz_distribution_charge
							,invalid_num
							,valid_num
							,product_sale_amount
							,amount_receivable
							,seventyP_product_sale_amount
							,discount_back_commission
							,amount_payable
							,cyz_service_charge
							,cyz_activities_charge
							,cyz_all_income
							,sale_gross_profit
							,sale_gross_profit_rate
							,distribution_actual_payment
							,platform_activities_charge
							,platform_service_charge
							,should_distribution_charge
							,cyz_distribution_charge_actual
							,diff_distribution_charge
							,platform_subsidy
							,platform_type
							,store_id
							,store_name
							,remark
						</sql>
	
	<select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
			oi.id
			,oi.create_date
			,oi.create_time
			,oi.order_no
			,oi.orgin_price
			,oi.discount_price
			,oi.after_discount_price
			,oi.actual_price
			,oi.order_distribution_charge
			,oi.platform_distribution_charge
			,oi.cyz_distribution_charge
			,oi.invalid_num
			,oi.valid_num
			,oi.product_sale_amount
			,oi.amount_receivable
			,oi.seventyP_product_sale_amount
			,oi.discount_back_commission
			,oi.amount_payable
			,oi.cyz_service_charge
			,oi.cyz_activities_charge
			,oi.cyz_all_income
			,oi.sale_gross_profit
			,oi.sale_gross_profit_rate
			,oi.distribution_actual_payment
			,oi.platform_activities_charge
			,oi.platform_service_charge
			,oi.should_distribution_charge
			,oi.cyz_distribution_charge_actual
			,oi.diff_distribution_charge
			,oi.platform_subsidy
			,oi.platform_type
			,oi.store_id
			,oi.store_name
			,oi.remark
		from account_operate_income as oi
		left join dn_store as s on s.STORE_ID =  oi.store_id
		where oi.id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="listByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.finance.model.AccountOperateIncome">
		select
			oi.id
			,oi.create_date
			,oi.create_time
			,oi.order_no
			,oi.orgin_price
			,oi.discount_price
			,oi.after_discount_price
			,oi.actual_price
			,oi.order_distribution_charge
			,oi.platform_distribution_charge
			,oi.cyz_distribution_charge
			,oi.invalid_num
			,oi.valid_num
			,oi.product_sale_amount
			,oi.amount_receivable
			,oi.seventyP_product_sale_amount
			,oi.discount_back_commission
			,oi.amount_payable
			,oi.cyz_service_charge
			,oi.cyz_activities_charge
			,oi.cyz_all_income
			,oi.sale_gross_profit
			,oi.sale_gross_profit_rate
			,oi.distribution_actual_payment
			,oi.platform_activities_charge
			,oi.platform_service_charge
			,oi.should_distribution_charge
			,oi.cyz_distribution_charge_actual
			,oi.diff_distribution_charge
			,oi.platform_subsidy
			,oi.platform_type
			,oi.store_id
			,oi.store_name
			,oi.remark
		from account_operate_income as oi
		left join dn_store as s on s.STORE_ID =  oi.store_id
		where 1=1
		<if test="id != null and '' != id">  
			and oi.id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="createDate != null and '' != createDate">  
			and oi.create_date = #{createDate,jdbcType=DATE}
		</if>
		<if test="createTime != null and '' != createTime">  
			and oi.create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="orderNo != null and '' != orderNo">  
			and oi.order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		<if test="orginPrice != null and '' != orginPrice">  
			and oi.orgin_price = #{orginPrice,jdbcType=DECIMAL}
		</if>
		<if test="discountPrice != null and '' != discountPrice">  
			and oi.discount_price = #{discountPrice,jdbcType=DECIMAL}
		</if>
		<if test="afterDiscountPrice != null and '' != afterDiscountPrice">  
			and oi.after_discount_price = #{afterDiscountPrice,jdbcType=DECIMAL}
		</if>
		<if test="actualPrice != null and '' != actualPrice">  
			and oi.actual_price = #{actualPrice,jdbcType=DECIMAL}
		</if>
		<if test="orderDistributionCharge != null and '' != orderDistributionCharge">  
			and oi.order_distribution_charge = #{orderDistributionCharge,jdbcType=DECIMAL}
		</if>
		<if test="platformDistributionCharge != null and '' != platformDistributionCharge">  
			and oi.platform_distribution_charge = #{platformDistributionCharge,jdbcType=DECIMAL}
		</if>
		<if test="cyzDistributionCharge != null and '' != cyzDistributionCharge">  
			and oi.cyz_distribution_charge = #{cyzDistributionCharge,jdbcType=DECIMAL}
		</if>
		<if test="invalidNum != null and '' != invalidNum">  
			and oi.invalid_num = #{invalidNum,jdbcType=INTEGER}
		</if>
		<if test="validNum != null and '' != validNum">  
			and oi.valid_num = #{validNum,jdbcType=INTEGER}
		</if>
		<if test="productSaleAmount != null and '' != productSaleAmount">  
			and oi.product_sale_amount = #{productSaleAmount,jdbcType=DECIMAL}
		</if>
		<if test="amountReceivable != null and '' != amountReceivable">  
			and oi.amount_receivable = #{amountReceivable,jdbcType=DECIMAL}
		</if>
		<if test="seventypProductSaleAmount != null and '' != seventypProductSaleAmount">  
			and oi.seventyP_product_sale_amount = #{seventypProductSaleAmount,jdbcType=DECIMAL}
		</if>
		<if test="discountBackCommission != null and '' != discountBackCommission">  
			and oi.discount_back_commission = #{discountBackCommission,jdbcType=DECIMAL}
		</if>
		<if test="amountPayable != null and '' != amountPayable">  
			and oi.amount_payable = #{amountPayable,jdbcType=DECIMAL}
		</if>
		<if test="cyzServiceCharge != null and '' != cyzServiceCharge">  
			and oi.cyz_service_charge = #{cyzServiceCharge,jdbcType=DECIMAL}
		</if>
		<if test="cyzActivitiesCharge != null and '' != cyzActivitiesCharge">  
			and oi.cyz_activities_charge = #{cyzActivitiesCharge,jdbcType=DECIMAL}
		</if>
		<if test="cyzAllIncome != null and '' != cyzAllIncome">  
			and oi.cyz_all_income = #{cyzAllIncome,jdbcType=DECIMAL}
		</if>
		<if test="saleGrossProfit != null and '' != saleGrossProfit">  
			and oi.sale_gross_profit = #{saleGrossProfit,jdbcType=DECIMAL}
		</if>
		<if test="saleGrossProfitRate != null and '' != saleGrossProfitRate">  
			and oi.sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		</if>
		<if test="distributionActualPayment != null and '' != distributionActualPayment">  
			and oi.distribution_actual_payment = #{distributionActualPayment,jdbcType=DECIMAL}
		</if>
		<if test="platformActivitiesCharge != null and '' != platformActivitiesCharge">  
			and oi.platform_activities_charge = #{platformActivitiesCharge,jdbcType=DECIMAL}
		</if>
		<if test="platformServiceCharge != null and '' != platformServiceCharge">  
			and oi.platform_service_charge = #{platformServiceCharge,jdbcType=DECIMAL}
		</if>
		<if test="shouldDistributionCharge != null and '' != shouldDistributionCharge">  
			and oi.should_distribution_charge = #{shouldDistributionCharge,jdbcType=DECIMAL}
		</if>
		<if test="cyzDistributionChargeActual != null and '' != cyzDistributionChargeActual">  
			and oi.cyz_distribution_charge_actual = #{cyzDistributionChargeActual,jdbcType=DECIMAL}
		</if>
		<if test="diffDistributionCharge != null and '' != diffDistributionCharge">  
			and oi.diff_distribution_charge = #{diffDistributionCharge,jdbcType=DECIMAL}
		</if>
		<if test="platformSubsidy != null and '' != platformSubsidy">  
			and oi.platform_subsidy = #{platformSubsidy,jdbcType=DECIMAL}
		</if>
		<if test="platformType != null and '' != platformType">  
			and oi.platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
		<if test="storeId != null and '' != storeId">  
			and oi.store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="storeName!= null and '' != storeName">  
			and oi.STORE_NAME like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%') 
		</if>
		<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
       	</if>
	</select>
	
	<select id="listAllFromOrderDetailByDate" resultMap="AllResultMap" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		SELECT 
			store_name,
			create_date,
			COUNT(*)-sum(is_invalid) as allvalid_num,
			sum(is_invalid) as allinvalid_num,
			sum(orgin_price) as allorgin_price,
			sum(order_distribution_charge) as allorder_distribution_charge,
			
			sum(goods_quality) as allgoods_quality,
			sum(actual_price) as allbase_price,
			<!-- sum(orgin_price) as allother_base_price, -->
			sum(platform_service_charge) as allplatform_service_charge,
			sum(platform_distribution_charge) as allplatform_dist_charge,
			
			sum(platform_activities_charge) as allplatform_activities_charge,
			sum(cyz_activities_charge) as allcyz_activities_charge,
			sum(actual_merchant_dist_charge) as allactual_merchant_dist_charge,
			SUM(operIncome.product_sale_amount) as allproduct_sale_amount,
			SUM(operIncome.amount_receivable) as allamount_receivable,
			SUM(operIncome.amount_payable) as allamount_payable,
			SUM(operIncome.cyz_service_charge) as allcyz_service_charge,
			SUM(operIncome.sale_gross_profit) as allsale_gross_profit,
			SUM(operIncome.cyz_distribution_charge) as allcyz_distribution_charge
		 from
			(SELECT
				od.id,
				od.goods_price,
				od.goods_quality,
				od.is_invalid,
				od.create_date AS create_date,
				od.order_time AS create_time,
				(od.prices + od.meal_fee) AS orgin_price,
				od.activities_subsidy_bymerchant AS discount_price,
				od.food_discount AS after_discount_price,
				sp.special_offer AS actual_price,
				od.order_dist_charge AS order_distribution_charge,
				od.platform_dist_charge AS platform_distribution_charge,
				od.actual_merchant_dist_charge,
				od.merchant_dist_charge AS cyz_distribution_charge, 
				(od.merchant_activities_subsidies - od.activities_subsidy_bymerchant) AS cyz_activities_charge, 
				od.platform_activities_subsidies AS platform_activities_charge,
				od.service_charge AS platform_service_charge,
				(CASE WHEN od.remark like "%扣单%" THEN 
				-(od.prices + od.meal_fee - od.activities_subsidy_bymerchant)
				ELSE 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant)
				END)
				 AS product_sale_amount,    
				od.settlement_amount AS amount_receivable, 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount)* 
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>
				 AS seventyP_product_sale_amount,
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount) * 
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>
				 + od.food_discount AS amount_payable, 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount) * (1-
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>) AS cyz_service_charge,
				
				od.prices+od.meal_fee
				-((od.prices+od.meal_fee-od.activities_subsidy_bymerchant-(case when od.special_offer>0 then od.special_offer else od.food_discount end))*
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if> + od.activities_subsidy_bymerchant)
				-(od.merchant_activities_subsidies-od.activities_subsidy_bymerchant)
				-od.service_charge AS sale_gross_profit,
				
				<!-- (od.prices + od.meal_fee - od.activities_subsidy_bymerchant) - (od.merchant_activities_subsidies - od.activities_subsidy_bymerchant) - od.service_charge -
				((od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount) * 
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>
				+ od.food_discount) AS sale_gross_profit, -->
				od.store_name,
				od.remark,
				od.platform_type,
				od.store_ELM_id,
				od.store_MT_id,
				od.store_BD_id
		 	FROM
				account_order_detail AS od
			 LEFT JOIN dn_store as s on s.elm_id = od.store_ELM_id 
			 LEFT JOIN store_product as sp on sp.store_id = s.STORE_ID and FIND_IN_SET(sp.product_name,od.goods_name)>0
			where 1=1
			<if test="createDate != null and '' != createDate">  
				and od.create_date = #{createDate,jdbcType=DATE}
			</if>
			<if test="storeId != null and '' != storeId">  
				and od.store_id = #{storeId,jdbcType=CHAR}
			</if>
			<if test="storeName != null and '' != storeName">  
				and od.store_name like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
			</if>
			<if test="checkNo != null and '' != checkNo">  
				and od.check_no = #{checkNo,jdbcType=VARCHAR}
			</if>
			<if test="orderType != null and '' != orderType">  
				and od.order_type = #{orderType,jdbcType=VARCHAR}
			</if>
			<if test="orderTime != null and '' != orderTime">  
				and od.order_time = #{orderTime,jdbcType=TIMESTAMP}
			</if>
			<if test="isInvalid != null and '' != isInvalid">  
				and od.is_invalid = #{isInvalid,jdbcType=TIMESTAMP}
			</if>
			 <if test="null != propsMap.startDate and propsMap.startDate != ''">
				<![CDATA[
					and DATE_FORMAT(od.create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if>
			<if test="null != propsMap.endDate and propsMap.endDate != ''">
				<![CDATA[
					and DATE_FORMAT(od.create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if> 
			<if test="null != propsMap.startTime and propsMap.startTime != ''">
				<![CDATA[
					and DATE_FORMAT(od.order_time,'%h:%m"%s') >= DATE_FORMAT(#{propsMap.startTime,jdbcType=TIMESTAMP},'%h:%m:%s')
				]]>
			</if>
			<if test="null != propsMap.endTime and propsMap.endTime != ''">
				<![CDATA[
					and DATE_FORMAT(od.order_time,'%h:%m:%s') <= DATE_FORMAT(#{propsMap.endTime,jdbcType=TIMESTAMP},'%h:%m:%s')
				]]>
			</if> 
			<if test="overTime != null and '' != overTime">  
				and od.over_time = #{overTime,jdbcType=TIMESTAMP}
			</if>
			<if test="orderIndex != null and '' != orderIndex">  
				and od.order_index = #{orderIndex,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null and '' != orderNo">  
				and od.order_no = #{orderNo,jdbcType=VARCHAR}
			</if>
			<if test="prices != null and '' != prices">  
				and od.prices = #{prices,jdbcType=DECIMAL}
			</if>
			<if test="mealFee != null and '' != mealFee">  
				and od.meal_fee = #{mealFee,jdbcType=DECIMAL}
			</if>
			<if test="giftAllowance != null and '' != giftAllowance">  
				and od.gift_allowance = #{giftAllowance,jdbcType=DECIMAL}
			</if>
			<if test="serviceRate != null and '' != serviceRate">  
				and od.service_rate = #{serviceRate,jdbcType=VARCHAR}
			</if>
			<if test="serviceCharge != null and '' != serviceCharge">  
				and od.service_charge = #{serviceCharge,jdbcType=DECIMAL}
			</if>
			<if test="refundAmount != null and '' != refundAmount">  
				and od.refund_amount = #{refundAmount,jdbcType=VARCHAR}
			</if>
			<if test="settlementAmount != null and '' != settlementAmount">  
				and od.settlement_amount = #{settlementAmount,jdbcType=DECIMAL}
			</if>
			<if test="distributionMode != null and '' != distributionMode">  
				and od.distribution_mode = #{distributionMode,jdbcType=VARCHAR}
			</if>
			<if test="remark != null and '' != remark">  
				and od.remark = #{remark,jdbcType=VARCHAR}
			</if>
			<if test="platformType != null and '' != platformType">  
				and od.platform_type = #{platformType,jdbcType=DECIMAL}
			</if>
			) as operIncome
			GROUP BY store_name,create_date
	</select>
	
	
	<select id="listAllFromOrderDetailByTotal" resultMap="AllResultMap" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		SELECT 
			store_name,
			create_date,
			COUNT(*)-sum(is_invalid) as allvalid_num,
			sum(is_invalid) as allinvalid_num,
			sum(orgin_price) as allorgin_price,
			sum(order_distribution_charge) as allorder_distribution_charge,
			
			sum(goods_quality) as allgoods_quality,
			sum(actual_price) as allbase_price,
			(CASE WHEN WORK_TIME_BEGIN>'20:00:00' then 12.5 ELSE 7.5 END) as distPrice,
			sum(platform_service_charge) as allplatform_service_charge,
			sum(platform_distribution_charge) as allplatform_dist_charge,
			
			sum(platform_activities_charge) as allplatform_activities_charge,
			sum(cyz_activities_charge) as allcyz_activities_charge,
			sum(actual_merchant_dist_charge) as allactual_merchant_dist_charge,
			
			SUM(operIncome.product_sale_amount) as allproduct_sale_amount,
			SUM(operIncome.amount_receivable) as allamount_receivable,
			SUM(operIncome.amount_payable) as allamount_payable,
			SUM(operIncome.cyz_service_charge) as allcyz_service_charge,
			SUM(operIncome.sale_gross_profit) as allsale_gross_profit,
			SUM(operIncome.cyz_distribution_charge) as allcyz_distribution_charge
		 from
			(SELECT
				od.id,
				od.goods_price,
				od.goods_quality,
				od.is_invalid,
				od.create_date AS create_date,
				od.order_time AS create_time,
				(od.prices + od.meal_fee) AS orgin_price,
				od.activities_subsidy_bymerchant AS discount_price,
				od.food_discount AS after_discount_price,
				sp.special_offer AS actual_price,
				od.order_dist_charge AS order_distribution_charge,
				od.platform_dist_charge AS platform_distribution_charge,
				od.actual_merchant_dist_charge,
				od.merchant_dist_charge AS cyz_distribution_charge, 
				(od.merchant_activities_subsidies - od.activities_subsidy_bymerchant) AS cyz_activities_charge, 
				od.platform_activities_subsidies AS platform_activities_charge,
				od.service_charge AS platform_service_charge,
				(CASE WHEN od.remark like "%扣单%" THEN 
				-(od.prices + od.meal_fee - od.activities_subsidy_bymerchant)
				ELSE 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant)
				END)
				 AS product_sale_amount,    
				od.settlement_amount AS amount_receivable, 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount)* 
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>
				 AS seventyP_product_sale_amount,
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount) * 
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>
				 + od.food_discount AS amount_payable, 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount) * (1-
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>) AS cyz_service_charge,
				'待确认' AS distribution_actual_payment,
				
				od.prices+od.meal_fee
				-((od.prices+od.meal_fee-od.activities_subsidy_bymerchant-(case when od.special_offer>0 then od.special_offer else od.food_discount end))*
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if> + od.activities_subsidy_bymerchant)
				-(od.merchant_activities_subsidies-od.activities_subsidy_bymerchant)
				-od.service_charge AS sale_gross_profit,
				s.WORK_TIME_BEGIN as WORK_TIME_BEGIN,
				od.store_name,
				od.remark,
				od.platform_type,
				od.store_ELM_id,
				od.store_MT_id,
				od.store_BD_id
		 	FROM
				account_order_detail AS od
			 LEFT JOIN dn_store as s on s.elm_id = od.store_ELM_id 
			 LEFT JOIN store_product as sp on sp.store_id = s.STORE_ID and FIND_IN_SET(sp.product_name,od.goods_name)>0
			where 1=1
			<if test="createDate != null and '' != createDate">  
				and od.create_date = #{createDate,jdbcType=DATE}
			</if>
			<if test="storeId != null and '' != storeId">  
				and od.store_id = #{storeId,jdbcType=CHAR}
			</if>
			<if test="storeName != null and '' != storeName">  
				and od.store_name like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
			</if>
			<if test="checkNo != null and '' != checkNo">  
				and od.check_no = #{checkNo,jdbcType=VARCHAR}
			</if>
			<if test="orderType != null and '' != orderType">  
				and od.order_type = #{orderType,jdbcType=VARCHAR}
			</if>
			<if test="orderTime != null and '' != orderTime">  
				and od.order_time = #{orderTime,jdbcType=TIMESTAMP}
			</if>
			<if test="isInvalid != null and '' != isInvalid">  
				and od.is_invalid = #{isInvalid,jdbcType=TIMESTAMP}
			</if>
			 <if test="null != propsMap.startDate and propsMap.startDate != ''">
				<![CDATA[
					and DATE_FORMAT(od.create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if>
			<if test="null != propsMap.endDate and propsMap.endDate != ''">
				<![CDATA[
					and DATE_FORMAT(od.create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if> 
			<if test="null != propsMap.startTime and propsMap.startTime != ''">
				<![CDATA[
					and DATE_FORMAT(od.order_time,'%h:%m"%s') >= DATE_FORMAT(#{propsMap.startTime,jdbcType=TIMESTAMP},'%h:%m:%s')
				]]>
			</if>
			<if test="null != propsMap.endTime and propsMap.endTime != ''">
				<![CDATA[
					and DATE_FORMAT(od.order_time,'%h:%m:%s') <= DATE_FORMAT(#{propsMap.endTime,jdbcType=TIMESTAMP},'%h:%m:%s')
				]]>
			</if> 
			<if test="overTime != null and '' != overTime">  
				and od.over_time = #{overTime,jdbcType=TIMESTAMP}
			</if>
			<if test="orderIndex != null and '' != orderIndex">  
				and od.order_index = #{orderIndex,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null and '' != orderNo">  
				and od.order_no = #{orderNo,jdbcType=VARCHAR}
			</if>
			<if test="prices != null and '' != prices">  
				and od.prices = #{prices,jdbcType=DECIMAL}
			</if>
			<if test="mealFee != null and '' != mealFee">  
				and od.meal_fee = #{mealFee,jdbcType=DECIMAL}
			</if>
			<if test="giftAllowance != null and '' != giftAllowance">  
				and od.gift_allowance = #{giftAllowance,jdbcType=DECIMAL}
			</if>
			<if test="serviceRate != null and '' != serviceRate">  
				and od.service_rate = #{serviceRate,jdbcType=VARCHAR}
			</if>
			<if test="serviceCharge != null and '' != serviceCharge">  
				and od.service_charge = #{serviceCharge,jdbcType=DECIMAL}
			</if>
			<if test="refundAmount != null and '' != refundAmount">  
				and od.refund_amount = #{refundAmount,jdbcType=VARCHAR}
			</if>
			<if test="settlementAmount != null and '' != settlementAmount">  
				and od.settlement_amount = #{settlementAmount,jdbcType=DECIMAL}
			</if>
			<if test="distributionMode != null and '' != distributionMode">  
				and od.distribution_mode = #{distributionMode,jdbcType=VARCHAR}
			</if>
			<if test="remark != null and '' != remark">  
				and od.remark = #{remark,jdbcType=VARCHAR}
			</if>
			<if test="platformType != null and '' != platformType">  
				and od.platform_type = #{platformType,jdbcType=DECIMAL}
			</if>
			) as operIncome
			GROUP BY store_name
	</select>
	
	<select id="listByConditionFromOrderDetail" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
			SELECT
				od.id,
				od.goods_price,
				od.goods_quality,
				od.is_invalid,
				od.create_date AS create_date,
				od.order_time AS create_time,
				(od.prices + od.meal_fee) AS orgin_price,
				od.activities_subsidy_bymerchant AS discount_price,
				od.food_discount AS after_discount_price,
				sp.special_offer AS actual_price,
				od.order_dist_charge AS order_distribution_charge,
				od.platform_dist_charge AS platform_distribution_charge,
				od.actual_merchant_dist_charge ,
				od.merchant_dist_charge AS cyz_distribution_charge, 
				(od.merchant_activities_subsidies - od.activities_subsidy_bymerchant) AS cyz_activities_charge, 
				od.platform_activities_subsidies AS platform_activities_charge,
				od.service_charge AS platform_service_charge,
				(CASE WHEN od.remark like "%扣单%" THEN 
				-(od.prices + od.meal_fee - od.activities_subsidy_bymerchant)
				ELSE 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant)
				END)
				 AS product_sale_amount,    
				od.settlement_amount AS amount_receivable, 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount)* 
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>
				AS seventyP_product_sale_amount,
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount) * 
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>
				 + od.food_discount AS amount_payable, 
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount) * (1-
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>)
				 AS cyz_service_charge,
				'待确认' AS distribution_actual_payment,
				(od.prices + od.meal_fee - od.activities_subsidy_bymerchant) - (od.merchant_activities_subsidies - od.activities_subsidy_bymerchant) - od.service_charge -
				((od.prices + od.meal_fee - od.activities_subsidy_bymerchant - od.food_discount) *
				<if test="orderSaleRate != null and '' != orderSaleRate">  
					#{orderSaleRate,jdbcType=DECIMAL}
				</if>
				 + od.food_discount) AS sale_gross_profit,
				od.store_name,
				od.remark,
				od.platform_type,
				od.store_ELM_id,
				od.store_MT_id,
				od.store_BD_id
		 	FROM
				account_order_detail AS od
			 LEFT JOIN dn_store as s on s.elm_id = od.store_ELM_id 
			 LEFT JOIN store_product as sp on sp.store_id = s.STORE_ID and FIND_IN_SET(sp.product_name,od.goods_name)>0
			where 1=1
		<if test="id != null and '' != id">  
			and od.id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="createDate != null and '' != createDate">  
			and od.create_date = #{createDate,jdbcType=DATE}
		</if>
		<if test="storeId != null and '' != storeId">  
			and od.store_id = #{storeId,jdbcType=CHAR}
		</if>
		<if test="storeName != null and '' != storeName">  
			and od.store_name like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
		</if>
		<if test="checkNo != null and '' != checkNo">  
			and od.check_no = #{checkNo,jdbcType=VARCHAR}
		</if>
		<if test="orderType != null and '' != orderType">  
			and od.order_type = #{orderType,jdbcType=VARCHAR}
		</if>
		<if test="orderTime != null and '' != orderTime">  
			and od.order_time = #{orderTime,jdbcType=TIMESTAMP}
		</if>
		<if test="isInvalid != null and '' != isInvalid">  
			and od.is_invalid = #{isInvalid,jdbcType=TIMESTAMP}
		</if>
		  <if test="null != propsMap.startDate and propsMap.startDate != ''">
				<![CDATA[
					and DATE_FORMAT(od.create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if>
			<if test="null != propsMap.endDate and propsMap.endDate != ''">
				<![CDATA[
					and DATE_FORMAT(od.create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if> 
			<if test="null != propsMap.startTime and propsMap.startTime != ''">
				<![CDATA[
					and DATE_FORMAT(od.order_time,'%h:%m"%s') >= DATE_FORMAT(#{propsMap.startTime,jdbcType=TIMESTAMP},'%h:%m:%s')
				]]>
			</if>
			<if test="null != propsMap.endTime and propsMap.endTime != ''">
				<![CDATA[
					and DATE_FORMAT(od.order_time,'%h:%m:%s') <= DATE_FORMAT(#{propsMap.endTime,jdbcType=TIMESTAMP},'%h:%m:%s')
				]]>
			</if> 
		<if test="overTime != null and '' != overTime">  
			and od.over_time = #{overTime,jdbcType=TIMESTAMP}
		</if>
		<if test="orderIndex != null and '' != orderIndex">  
			and od.order_index = #{orderIndex,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null and '' != orderNo">  
			and od.order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		<if test="prices != null and '' != prices">  
			and od.prices = #{prices,jdbcType=DECIMAL}
		</if>
		<if test="mealFee != null and '' != mealFee">  
			and od.meal_fee = #{mealFee,jdbcType=DECIMAL}
		</if>
		<if test="giftAllowance != null and '' != giftAllowance">  
			and od.gift_allowance = #{giftAllowance,jdbcType=DECIMAL}
		</if>
		<if test="serviceRate != null and '' != serviceRate">  
			and od.service_rate = #{serviceRate,jdbcType=VARCHAR}
		</if>
		<if test="serviceCharge != null and '' != serviceCharge">  
			and od.service_charge = #{serviceCharge,jdbcType=DECIMAL}
		</if>
		<if test="refundAmount != null and '' != refundAmount">  
			and od.refund_amount = #{refundAmount,jdbcType=VARCHAR}
		</if>
		<if test="settlementAmount != null and '' != settlementAmount">  
			and od.settlement_amount = #{settlementAmount,jdbcType=DECIMAL}
		</if>
		<if test="distributionMode != null and '' != distributionMode">  
			and od.distribution_mode = #{distributionMode,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and '' != remark">  
			and od.remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="platformType != null and '' != platformType">  
			and od.platform_type = #{platformType,jdbcType=DECIMAL}
		</if>
		<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
       	</if>
	</select>
	
	<delete id="deleteByKey" parameterType="java.lang.String">
		delete from account_operate_income
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<insert id="add" parameterType="com.dongnao.workbench.finance.model.AccountOperateIncome">
		insert into account_operate_income (
		<include refid="Base_Column_List" />
		)values (
				#{id,jdbcType=VARCHAR}
				,#{createDate,jdbcType=DATE}
				,#{createTime,jdbcType=TIMESTAMP}
				,#{orderNo,jdbcType=VARCHAR}
				,#{orginPrice,jdbcType=DECIMAL}
				,#{discountPrice,jdbcType=DECIMAL}
				,#{afterDiscountPrice,jdbcType=DECIMAL}
				,#{actualPrice,jdbcType=DECIMAL}
				,#{orderDistributionCharge,jdbcType=DECIMAL}
				,#{platformDistributionCharge,jdbcType=DECIMAL}
				,#{cyzDistributionCharge,jdbcType=DECIMAL}
				,#{invalidNum,jdbcType=INTEGER}
				,#{validNum,jdbcType=INTEGER}
				,#{productSaleAmount,jdbcType=DECIMAL}
				,#{amountReceivable,jdbcType=DECIMAL}
				,#{seventypProductSaleAmount,jdbcType=DECIMAL}
				,#{discountBackCommission,jdbcType=DECIMAL}
				,#{amountPayable,jdbcType=DECIMAL}
				,#{cyzServiceCharge,jdbcType=DECIMAL}
				,#{cyzActivitiesCharge,jdbcType=DECIMAL}
				,#{cyzAllIncome,jdbcType=DECIMAL}
				,#{saleGrossProfit,jdbcType=DECIMAL}
				,#{saleGrossProfitRate,jdbcType=VARCHAR}
				,#{distributionActualPayment,jdbcType=DECIMAL}
				,#{platformActivitiesCharge,jdbcType=DECIMAL}
				,#{platformServiceCharge,jdbcType=DECIMAL}
				,#{shouldDistributionCharge,jdbcType=DECIMAL}
				,#{cyzDistributionChargeActual,jdbcType=DECIMAL}
				,#{diffDistributionCharge,jdbcType=DECIMAL}
				,#{platformSubsidy,jdbcType=DECIMAL}
				,#{platformType,jdbcType=VARCHAR}
				,#{storeId,jdbcType=VARCHAR}
				,#{storeName,jdbcType=VARCHAR}
				,#{remark,jdbcType=VARCHAR}
			)
	</insert>
	
	<insert id="addOperaDetail" parameterType="java.util.List">
		insert into account_order_detail (
				id
				,create_date
				,create_time
				,order_no
				,orgin_price
				,discount_price
				,after_discount_price
				,actual_price
				,order_distribution_charge
				,platform_distribution_charge
				,cyz_distribution_charge
				,cyz_activities_charge
				,platform_activities_charge
				,platform_service_charge
				,product_sale_amount
				,amount_receivable
				,seventyP_product_sale_amount
				,amount_payable
				,cyz_service_charge
				,distribution_actual_payment
				,sale_gross_profit
				,sale_gross_profit_rate
				,remark
				,platform_type
				,store_id
				,store_name
		)values
		<foreach collection="list" item="item" index="index" separator="," >
		 (
		 		#{item.id,jdbcType=VARCHAR}
				,#{item.create_date,jdbcType=DATE}
				,#{item.create_time,jdbcType=TIMESTAMP}
				,#{item.order_no,jdbcType=VARCHAR}
				,#{item.orgin_price,jdbcType=DECIMAL}
				,#{item.discount_price,jdbcType=DECIMAL}
				,#{item.after_discount_price,jdbcType=DECIMAL}
				,#{item.actual_price,jdbcType=DECIMAL}
				,#{item.order_distribution_charge,jdbcType=DECIMAL}
				,#{item.platform_distribution_charge,jdbcType=DECIMAL}
				,#{item.cyz_distribution_charge,jdbcType=DECIMAL}
				,#{item.cyz_activities_charge,jdbcType=DECIMAL}
				,#{item.platform_activities_charge,jdbcType=DECIMAL}
				,#{item.platform_service_charge,jdbcType=DECIMAL}
				,#{item.product_sale_amount,jdbcType=DECIMAL}
				,#{item.amount_receivable,jdbcType=DECIMAL}
				,#{item.seventyP_product_sale_amount,jdbcType=DECIMAL}
				,#{item.amount_payable,jdbcType=DECIMAL}
				,#{item.cyz_service_charge,jdbcType=DECIMAL}
				,#{item.distribution_actual_payment,jdbcType=VARCHAR}
				,#{item.sale_gross_profit,jdbcType=DECIMAL}
				,#{item.sale_gross_profit_rate,jdbcType=VARCHAR}
				,#{item.remark,jdbcType=VARCHAR}
				,#{item.platform_type,jdbcType=VARCHAR}
				,#{item.store_id,jdbcType=VARCHAR}
				,#{item.store_name,jdbcType=VARCHAR}
		)
		</foreach>
	</insert>
	
	<update id="update" parameterType="com.dongnao.workbench.finance.model.AccountOperateIncome">
		update account_operate_income  set
			id= #{id,jdbcType=VARCHAR}
			,create_date = #{createDate,jdbcType=DATE}
			,create_time = #{createTime,jdbcType=TIMESTAMP}
			,order_no = #{orderNo,jdbcType=VARCHAR}
			,orgin_price = #{orginPrice,jdbcType=DECIMAL}
			,discount_price = #{discountPrice,jdbcType=DECIMAL}
			,after_discount_price = #{afterDiscountPrice,jdbcType=DECIMAL}
			,actual_price = #{actualPrice,jdbcType=DECIMAL}
			,order_distribution_charge = #{orderDistributionCharge,jdbcType=DECIMAL}
			,platform_distribution_charge = #{platformDistributionCharge,jdbcType=DECIMAL}
			,cyz_distribution_charge = #{cyzDistributionCharge,jdbcType=DECIMAL}
			,invalid_num = #{invalidNum,jdbcType=INTEGER}
			,valid_num = #{validNum,jdbcType=INTEGER}
			,product_sale_amount = #{productSaleAmount,jdbcType=DECIMAL}
			,amount_receivable = #{amountReceivable,jdbcType=DECIMAL}
			,seventyP_product_sale_amount = #{seventypProductSaleAmount,jdbcType=DECIMAL}
			,discount_back_commission = #{discountBackCommission,jdbcType=DECIMAL}
			,amount_payable = #{amountPayable,jdbcType=DECIMAL}
			,cyz_service_charge = #{cyzServiceCharge,jdbcType=DECIMAL}
			,cyz_activities_charge = #{cyzActivitiesCharge,jdbcType=DECIMAL}
			,cyz_all_income = #{cyzAllIncome,jdbcType=DECIMAL}
			,sale_gross_profit = #{saleGrossProfit,jdbcType=DECIMAL}
			,sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
			,distribution_actual_payment = #{distributionActualPayment,jdbcType=DECIMAL}
			,platform_activities_charge = #{platformActivitiesCharge,jdbcType=DECIMAL}
			,platform_service_charge = #{platformServiceCharge,jdbcType=DECIMAL}
			,should_distribution_charge = #{shouldDistributionCharge,jdbcType=DECIMAL}
			,cyz_distribution_charge_actual = #{cyzDistributionChargeActual,jdbcType=DECIMAL}
			,diff_distribution_charge = #{diffDistributionCharge,jdbcType=DECIMAL}
			,platform_subsidy = #{platformSubsidy,jdbcType=DECIMAL}
			,platform_type = #{platformType,jdbcType=VARCHAR}
			,store_id = #{storeId,jdbcType=VARCHAR}
			,store_name = #{storeName,jdbcType=VARCHAR}
			,remark = #{remark,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>
