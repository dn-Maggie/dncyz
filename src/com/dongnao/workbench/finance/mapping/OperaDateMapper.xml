<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongnao.workbench.finance.dao.OperaDateMapper">
	<resultMap id="BaseResultMap" type="com.dongnao.workbench.finance.model.OperaDate">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="store_id" property="storeId" jdbcType="VARCHAR" />
		<result column="store_name" property="storeName" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="invalid_num" property="invalidNum" jdbcType="INTEGER" />
		<result column="valid_num" property="validNum" jdbcType="INTEGER" />
		<result column="goods_quality" property="goodsQuality" jdbcType="VARCHAR" />
		<result column="orgin_price" property="orginPrice" jdbcType="VARCHAR" />
		<result column="meal_fee" property="mealFee" jdbcType="VARCHAR" />
		<result column="special_orgin" property="specialOrgin" jdbcType="VARCHAR" />
		<result column="special_offer" property="specialOffer" jdbcType="VARCHAR" />
		<result column="activities_subsidy_bymerchant" property="activitiesSubsidyBymerchant" jdbcType="VARCHAR" />
		<result column="order_dist_charge" property="orderDistCharge" jdbcType="VARCHAR" />
		<result column="platform_dist_charge" property="platformDistCharge" jdbcType="VARCHAR" />
		<result column="cyz_dist_charge" property="cyzDistCharge" jdbcType="VARCHAR" />
		<result column="activities_subsidy_bycompany" property="activitiesSubsidyBycompany" jdbcType="VARCHAR" />
		<result column="platform_activities_charge" property="platformActivitiesCharge" jdbcType="VARCHAR" />
		<result column="platform_service_charge" property="platformServiceCharge" jdbcType="VARCHAR" />
		<result column="product_sale_amount" property="productSaleAmount" jdbcType="VARCHAR" />
		<result column="amount_receivable" property="amountReceivable" jdbcType="VARCHAR" />
		<result column="order_sale_rate" property="orderSaleRate" jdbcType="VARCHAR" />
		<result column="amount_rate_payable" property="amountRatePayable" jdbcType="VARCHAR" />
		<result column="amount_payable" property="amountPayable" jdbcType="VARCHAR" />
		<result column="cyz_service_charge" property="cyzServiceCharge" jdbcType="VARCHAR" />
		<result column="cyz_service_charge_industry_part" property="cyzServiceChargeIndustryPart" jdbcType="VARCHAR" />
		<result column="cyz_service_charge_opera_part" property="cyzServiceChargeOperaPart" jdbcType="VARCHAR" />
		<result column="actual_merchant_dist_charge" property="actualMerchantDistCharge" jdbcType="VARCHAR" />
		<result column="sale_gross_profit" property="saleGrossProfit" jdbcType="VARCHAR" />
		<result column="sale_gross_profit_rate" property="saleGrossProfitRate" jdbcType="VARCHAR" />
		<result column="dist_price" property="distPrice" jdbcType="VARCHAR" />
		<result column="dist_all" property="distAll" jdbcType="VARCHAR" />
		<result column="dist_diff" property="distDiff" jdbcType="VARCHAR" />
		<result column="service_all" property="serviceAll" jdbcType="VARCHAR" />
		<result column="profit_all" property="profitAll" jdbcType="VARCHAR" />
		<result column="other_all" property="otherAll" jdbcType="VARCHAR" />
		<result column="allbase_price" property="allbasePrice" jdbcType="VARCHAR" />
		<result column="allother_base_price" property="allotherBasePrice" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="platform_type" property="platformType" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
	 	id
		,store_id
		,store_name
		,create_date
		,invalid_num
		,valid_num
		,goods_quality
		,orgin_price
		,meal_fee
		,special_orgin
		,special_offer
		,activities_subsidy_bymerchant
		,order_dist_charge
		,platform_dist_charge
		,cyz_dist_charge
		,activities_subsidy_bycompany
		,platform_activities_charge
		,platform_service_charge
		,product_sale_amount
		,amount_receivable
		,order_sale_rate
		,amount_rate_payable
		,amount_payable
		,cyz_service_charge
		,cyz_service_charge_industry_part
		,cyz_service_charge_opera_part
		,actual_merchant_dist_charge
		,sale_gross_profit
		,sale_gross_profit_rate
		,dist_price
		,dist_all
		,dist_diff
		,service_all
		,profit_all
		,other_all
		,allbase_price
		,allother_base_price
		,remark
		,platform_type
	</sql>
	<!--获取符合条件的底价抽佣运营数据 -->
	<select id="getBasePriceByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from opera_date_base_price
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<!--查看底价抽佣运营表 -->
	<select id="listBasePriceByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		select
		<include refid="Base_Column_List" />
		from opera_date_base_price
		where 1=1
		<if test="id != null and '' != id">  
			and id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="storeId != null and '' != storeId">  
			and store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="storeName != null and '' != storeName">  
			and store_name = #{storeName,jdbcType=VARCHAR}
		</if>
		<if test="createDate != null and '' != createDate">  
			and create_date = #{createDate,jdbcType=TIMESTAMP}
		</if>
		<if test="invalidNum != null and '' != invalidNum">  
			and invalid_num = #{invalidNum,jdbcType=INTEGER}
		</if>
		<if test="validNum != null and '' != validNum">  
			and valid_num = #{validNum,jdbcType=INTEGER}
		</if>
		<if test="goodsQuality != null and '' != goodsQuality">  
			and goods_quality = #{goodsQuality,jdbcType=VARCHAR}
		</if>
		<if test="orginPrice != null and '' != orginPrice">  
			and orgin_price = #{orginPrice,jdbcType=VARCHAR}
		</if>
		<if test="mealFee != null and '' != mealFee">  
			and meal_fee = #{mealFee,jdbcType=VARCHAR}
		</if>
		<if test="specialOrgin != null and '' != specialOrgin">  
			and special_orgin = #{specialOrgin,jdbcType=VARCHAR}
		</if>
		<if test="specialOffer != null and '' != specialOffer">  
			and special_offer = #{specialOffer,jdbcType=VARCHAR}
		</if>
		<if test="activitiesSubsidyBymerchant != null and '' != activitiesSubsidyBymerchant">  
			and activities_subsidy_bymerchant = #{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
		</if>
		<if test="orderDistCharge != null and '' != orderDistCharge">  
			and order_dist_charge = #{orderDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="platformDistCharge != null and '' != platformDistCharge">  
			and platform_dist_charge = #{platformDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="cyzDistCharge != null and '' != cyzDistCharge">  
			and cyz_dist_charge = #{cyzDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="activitiesSubsidyBycompany != null and '' != activitiesSubsidyBycompany">  
			and activities_subsidy_bycompany = #{activitiesSubsidyBycompany,jdbcType=VARCHAR}
		</if>
		<if test="platformActivitiesCharge != null and '' != platformActivitiesCharge">  
			and platform_activities_charge = #{platformActivitiesCharge,jdbcType=VARCHAR}
		</if>
		<if test="platformServiceCharge != null and '' != platformServiceCharge">  
			and platform_service_charge = #{platformServiceCharge,jdbcType=VARCHAR}
		</if>
		<if test="productSaleAmount != null and '' != productSaleAmount">  
			and product_sale_amount = #{productSaleAmount,jdbcType=VARCHAR}
		</if>
		<if test="amountReceivable != null and '' != amountReceivable">  
			and amount_receivable = #{amountReceivable,jdbcType=VARCHAR}
		</if>
		<if test="orderSaleRate != null and '' != orderSaleRate">  
			and order_sale_rate = #{orderSaleRate,jdbcType=VARCHAR}
		</if>
		<if test="amountRatePayable != null and '' != amountRatePayable">  
			and amount_rate_payable = #{amountRatePayable,jdbcType=VARCHAR}
		</if>
		<if test="amountPayable != null and '' != amountPayable">  
			and amount_payable = #{amountPayable,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceCharge != null and '' != cyzServiceCharge">  
			and cyz_service_charge = #{cyzServiceCharge,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceChargeIndustryPart != null and '' != cyzServiceChargeIndustryPart">  
			and cyz_service_charge_industry_part = #{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceChargeOperaPart != null and '' != cyzServiceChargeOperaPart">  
			and cyz_service_charge_opera_part = #{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
		</if>
		<if test="actualMerchantDistCharge != null and '' != actualMerchantDistCharge">  
			and actual_merchant_dist_charge = #{actualMerchantDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="saleGrossProfit != null and '' != saleGrossProfit">  
			and sale_gross_profit = #{saleGrossProfit,jdbcType=VARCHAR}
		</if>
		<if test="saleGrossProfitRate != null and '' != saleGrossProfitRate">  
			and sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		</if>
		<if test="distPrice != null and '' != distPrice">  
			and dist_price = #{distPrice,jdbcType=VARCHAR}
		</if>
		<if test="distAll != null and '' != distAll">  
			and dist_all = #{distAll,jdbcType=VARCHAR}
		</if>
		<if test="distDiff != null and '' != distDiff">  
			and dist_diff = #{distDiff,jdbcType=VARCHAR}
		</if>
		<if test="serviceAll != null and '' != serviceAll">  
			and service_all = #{serviceAll,jdbcType=VARCHAR}
		</if>
		<if test="profitAll != null and '' != profitAll">  
			and profit_all = #{profitAll,jdbcType=VARCHAR}
		</if>
		<if test="otherAll != null and '' != otherAll">  
			and other_all = #{otherAll,jdbcType=VARCHAR}
		</if>
		<if test="allbasePrice != null and '' != allbasePrice">  
			and allbase_price = #{allbasePrice,jdbcType=VARCHAR}
		</if>
		<if test="allotherBasePrice != null and '' != allotherBasePrice">  
			and allother_base_price = #{allotherBasePrice,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and '' != remark">  
			and remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="platformType != null and '' != platformType">  
			and platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
				<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
         	</if>
	</select>
	<!--查看深运营表 -->
	<select id="listDeepOperaByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		select
		<include refid="Base_Column_List" />
		from opera_date_deep_opera
		where 1=1
		<if test="id != null and '' != id">  
			and id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="storeId != null and '' != storeId">  
			and store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="storeName != null and '' != storeName">  
			and store_name = #{storeName,jdbcType=VARCHAR}
		</if>
		<if test="createDate != null and '' != createDate">  
			and create_date = #{createDate,jdbcType=TIMESTAMP}
		</if>
		<if test="invalidNum != null and '' != invalidNum">  
			and invalid_num = #{invalidNum,jdbcType=INTEGER}
		</if>
		<if test="validNum != null and '' != validNum">  
			and valid_num = #{validNum,jdbcType=INTEGER}
		</if>
		<if test="goodsQuality != null and '' != goodsQuality">  
			and goods_quality = #{goodsQuality,jdbcType=VARCHAR}
		</if>
		<if test="orginPrice != null and '' != orginPrice">  
			and orgin_price = #{orginPrice,jdbcType=VARCHAR}
		</if>
		<if test="mealFee != null and '' != mealFee">  
			and meal_fee = #{mealFee,jdbcType=VARCHAR}
		</if>
		<if test="specialOrgin != null and '' != specialOrgin">  
			and special_orgin = #{specialOrgin,jdbcType=VARCHAR}
		</if>
		<if test="specialOffer != null and '' != specialOffer">  
			and special_offer = #{specialOffer,jdbcType=VARCHAR}
		</if>
		<if test="activitiesSubsidyBymerchant != null and '' != activitiesSubsidyBymerchant">  
			and activities_subsidy_bymerchant = #{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
		</if>
		<if test="orderDistCharge != null and '' != orderDistCharge">  
			and order_dist_charge = #{orderDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="platformDistCharge != null and '' != platformDistCharge">  
			and platform_dist_charge = #{platformDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="cyzDistCharge != null and '' != cyzDistCharge">  
			and cyz_dist_charge = #{cyzDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="activitiesSubsidyBycompany != null and '' != activitiesSubsidyBycompany">  
			and activities_subsidy_bycompany = #{activitiesSubsidyBycompany,jdbcType=VARCHAR}
		</if>
		<if test="platformActivitiesCharge != null and '' != platformActivitiesCharge">  
			and platform_activities_charge = #{platformActivitiesCharge,jdbcType=VARCHAR}
		</if>
		<if test="platformServiceCharge != null and '' != platformServiceCharge">  
			and platform_service_charge = #{platformServiceCharge,jdbcType=VARCHAR}
		</if>
		<if test="productSaleAmount != null and '' != productSaleAmount">  
			and product_sale_amount = #{productSaleAmount,jdbcType=VARCHAR}
		</if>
		<if test="amountReceivable != null and '' != amountReceivable">  
			and amount_receivable = #{amountReceivable,jdbcType=VARCHAR}
		</if>
		<if test="orderSaleRate != null and '' != orderSaleRate">  
			and order_sale_rate = #{orderSaleRate,jdbcType=VARCHAR}
		</if>
		<if test="amountRatePayable != null and '' != amountRatePayable">  
			and amount_rate_payable = #{amountRatePayable,jdbcType=VARCHAR}
		</if>
		<if test="amountPayable != null and '' != amountPayable">  
			and amount_payable = #{amountPayable,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceCharge != null and '' != cyzServiceCharge">  
			and cyz_service_charge = #{cyzServiceCharge,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceChargeIndustryPart != null and '' != cyzServiceChargeIndustryPart">  
			and cyz_service_charge_industry_part = #{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceChargeOperaPart != null and '' != cyzServiceChargeOperaPart">  
			and cyz_service_charge_opera_part = #{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
		</if>
		<if test="actualMerchantDistCharge != null and '' != actualMerchantDistCharge">  
			and actual_merchant_dist_charge = #{actualMerchantDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="saleGrossProfit != null and '' != saleGrossProfit">  
			and sale_gross_profit = #{saleGrossProfit,jdbcType=VARCHAR}
		</if>
		<if test="saleGrossProfitRate != null and '' != saleGrossProfitRate">  
			and sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		</if>
		<if test="distPrice != null and '' != distPrice">  
			and dist_price = #{distPrice,jdbcType=VARCHAR}
		</if>
		<if test="distAll != null and '' != distAll">  
			and dist_all = #{distAll,jdbcType=VARCHAR}
		</if>
		<if test="distDiff != null and '' != distDiff">  
			and dist_diff = #{distDiff,jdbcType=VARCHAR}
		</if>
		<if test="serviceAll != null and '' != serviceAll">  
			and service_all = #{serviceAll,jdbcType=VARCHAR}
		</if>
		<if test="profitAll != null and '' != profitAll">  
			and profit_all = #{profitAll,jdbcType=VARCHAR}
		</if>
		<if test="otherAll != null and '' != otherAll">  
			and other_all = #{otherAll,jdbcType=VARCHAR}
		</if>
		<if test="allbasePrice != null and '' != allbasePrice">  
			and allbase_price = #{allbasePrice,jdbcType=VARCHAR}
		</if>
		<if test="allotherBasePrice != null and '' != allotherBasePrice">  
			and allother_base_price = #{allotherBasePrice,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and '' != remark">  
			and remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="platformType != null and '' != platformType">  
			and platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
				<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
         	</if>
	</select>
	<!--查看销售额抽佣运营表 -->
	<select id="listSaleRateByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		select
		<include refid="Base_Column_List" />
		from opera_date_sale_rate
		where 1=1
		<if test="id != null and '' != id">  
			and id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="storeId != null and '' != storeId">  
			and store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="storeName != null and '' != storeName">  
			and store_name = #{storeName,jdbcType=VARCHAR}
		</if>
		<if test="createDate != null and '' != createDate">  
			and create_date = #{createDate,jdbcType=TIMESTAMP}
		</if>
		<if test="invalidNum != null and '' != invalidNum">  
			and invalid_num = #{invalidNum,jdbcType=INTEGER}
		</if>
		<if test="validNum != null and '' != validNum">  
			and valid_num = #{validNum,jdbcType=INTEGER}
		</if>
		<if test="goodsQuality != null and '' != goodsQuality">  
			and goods_quality = #{goodsQuality,jdbcType=VARCHAR}
		</if>
		<if test="orginPrice != null and '' != orginPrice">  
			and orgin_price = #{orginPrice,jdbcType=VARCHAR}
		</if>
		<if test="mealFee != null and '' != mealFee">  
			and meal_fee = #{mealFee,jdbcType=VARCHAR}
		</if>
		<if test="specialOrgin != null and '' != specialOrgin">  
			and special_orgin = #{specialOrgin,jdbcType=VARCHAR}
		</if>
		<if test="specialOffer != null and '' != specialOffer">  
			and special_offer = #{specialOffer,jdbcType=VARCHAR}
		</if>
		<if test="activitiesSubsidyBymerchant != null and '' != activitiesSubsidyBymerchant">  
			and activities_subsidy_bymerchant = #{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
		</if>
		<if test="orderDistCharge != null and '' != orderDistCharge">  
			and order_dist_charge = #{orderDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="platformDistCharge != null and '' != platformDistCharge">  
			and platform_dist_charge = #{platformDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="cyzDistCharge != null and '' != cyzDistCharge">  
			and cyz_dist_charge = #{cyzDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="activitiesSubsidyBycompany != null and '' != activitiesSubsidyBycompany">  
			and activities_subsidy_bycompany = #{activitiesSubsidyBycompany,jdbcType=VARCHAR}
		</if>
		<if test="platformActivitiesCharge != null and '' != platformActivitiesCharge">  
			and platform_activities_charge = #{platformActivitiesCharge,jdbcType=VARCHAR}
		</if>
		<if test="platformServiceCharge != null and '' != platformServiceCharge">  
			and platform_service_charge = #{platformServiceCharge,jdbcType=VARCHAR}
		</if>
		<if test="productSaleAmount != null and '' != productSaleAmount">  
			and product_sale_amount = #{productSaleAmount,jdbcType=VARCHAR}
		</if>
		<if test="amountReceivable != null and '' != amountReceivable">  
			and amount_receivable = #{amountReceivable,jdbcType=VARCHAR}
		</if>
		<if test="orderSaleRate != null and '' != orderSaleRate">  
			and order_sale_rate = #{orderSaleRate,jdbcType=VARCHAR}
		</if>
		<if test="amountRatePayable != null and '' != amountRatePayable">  
			and amount_rate_payable = #{amountRatePayable,jdbcType=VARCHAR}
		</if>
		<if test="amountPayable != null and '' != amountPayable">  
			and amount_payable = #{amountPayable,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceCharge != null and '' != cyzServiceCharge">  
			and cyz_service_charge = #{cyzServiceCharge,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceChargeIndustryPart != null and '' != cyzServiceChargeIndustryPart">  
			and cyz_service_charge_industry_part = #{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceChargeOperaPart != null and '' != cyzServiceChargeOperaPart">  
			and cyz_service_charge_opera_part = #{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
		</if>
		<if test="actualMerchantDistCharge != null and '' != actualMerchantDistCharge">  
			and actual_merchant_dist_charge = #{actualMerchantDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="saleGrossProfit != null and '' != saleGrossProfit">  
			and sale_gross_profit = #{saleGrossProfit,jdbcType=VARCHAR}
		</if>
		<if test="saleGrossProfitRate != null and '' != saleGrossProfitRate">  
			and sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		</if>
		<if test="distPrice != null and '' != distPrice">  
			and dist_price = #{distPrice,jdbcType=VARCHAR}
		</if>
		<if test="distAll != null and '' != distAll">  
			and dist_all = #{distAll,jdbcType=VARCHAR}
		</if>
		<if test="distDiff != null and '' != distDiff">  
			and dist_diff = #{distDiff,jdbcType=VARCHAR}
		</if>
		<if test="serviceAll != null and '' != serviceAll">  
			and service_all = #{serviceAll,jdbcType=VARCHAR}
		</if>
		<if test="profitAll != null and '' != profitAll">  
			and profit_all = #{profitAll,jdbcType=VARCHAR}
		</if>
		<if test="otherAll != null and '' != otherAll">  
			and other_all = #{otherAll,jdbcType=VARCHAR}
		</if>
		<if test="allbasePrice != null and '' != allbasePrice">  
			and allbase_price = #{allbasePrice,jdbcType=VARCHAR}
		</if>
		<if test="allotherBasePrice != null and '' != allotherBasePrice">  
			and allother_base_price = #{allotherBasePrice,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and '' != remark">  
			and remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="platformType != null and '' != platformType">  
			and platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
				<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
         	</if>
	</select>
	<!--查看平台到账抽佣运营表 -->
	<select id="listPlatformAccountByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		select
		<include refid="Base_Column_List" />
		from opera_date_platform_account
		where 1=1
		<if test="id != null and '' != id">  
			and id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="storeId != null and '' != storeId">  
			and store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="storeName != null and '' != storeName">  
			and store_name = #{storeName,jdbcType=VARCHAR}
		</if>
		<if test="createDate != null and '' != createDate">  
			and create_date = #{createDate,jdbcType=TIMESTAMP}
		</if>
		<if test="invalidNum != null and '' != invalidNum">  
			and invalid_num = #{invalidNum,jdbcType=INTEGER}
		</if>
		<if test="validNum != null and '' != validNum">  
			and valid_num = #{validNum,jdbcType=INTEGER}
		</if>
		<if test="goodsQuality != null and '' != goodsQuality">  
			and goods_quality = #{goodsQuality,jdbcType=VARCHAR}
		</if>
		<if test="orginPrice != null and '' != orginPrice">  
			and orgin_price = #{orginPrice,jdbcType=VARCHAR}
		</if>
		<if test="mealFee != null and '' != mealFee">  
			and meal_fee = #{mealFee,jdbcType=VARCHAR}
		</if>
		<if test="specialOrgin != null and '' != specialOrgin">  
			and special_orgin = #{specialOrgin,jdbcType=VARCHAR}
		</if>
		<if test="specialOffer != null and '' != specialOffer">  
			and special_offer = #{specialOffer,jdbcType=VARCHAR}
		</if>
		<if test="activitiesSubsidyBymerchant != null and '' != activitiesSubsidyBymerchant">  
			and activities_subsidy_bymerchant = #{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
		</if>
		<if test="orderDistCharge != null and '' != orderDistCharge">  
			and order_dist_charge = #{orderDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="platformDistCharge != null and '' != platformDistCharge">  
			and platform_dist_charge = #{platformDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="cyzDistCharge != null and '' != cyzDistCharge">  
			and cyz_dist_charge = #{cyzDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="activitiesSubsidyBycompany != null and '' != activitiesSubsidyBycompany">  
			and activities_subsidy_bycompany = #{activitiesSubsidyBycompany,jdbcType=VARCHAR}
		</if>
		<if test="platformActivitiesCharge != null and '' != platformActivitiesCharge">  
			and platform_activities_charge = #{platformActivitiesCharge,jdbcType=VARCHAR}
		</if>
		<if test="platformServiceCharge != null and '' != platformServiceCharge">  
			and platform_service_charge = #{platformServiceCharge,jdbcType=VARCHAR}
		</if>
		<if test="productSaleAmount != null and '' != productSaleAmount">  
			and product_sale_amount = #{productSaleAmount,jdbcType=VARCHAR}
		</if>
		<if test="amountReceivable != null and '' != amountReceivable">  
			and amount_receivable = #{amountReceivable,jdbcType=VARCHAR}
		</if>
		<if test="orderSaleRate != null and '' != orderSaleRate">  
			and order_sale_rate = #{orderSaleRate,jdbcType=VARCHAR}
		</if>
		<if test="amountRatePayable != null and '' != amountRatePayable">  
			and amount_rate_payable = #{amountRatePayable,jdbcType=VARCHAR}
		</if>
		<if test="amountPayable != null and '' != amountPayable">  
			and amount_payable = #{amountPayable,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceCharge != null and '' != cyzServiceCharge">  
			and cyz_service_charge = #{cyzServiceCharge,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceChargeIndustryPart != null and '' != cyzServiceChargeIndustryPart">  
			and cyz_service_charge_industry_part = #{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
		</if>
		<if test="cyzServiceChargeOperaPart != null and '' != cyzServiceChargeOperaPart">  
			and cyz_service_charge_opera_part = #{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
		</if>
		<if test="actualMerchantDistCharge != null and '' != actualMerchantDistCharge">  
			and actual_merchant_dist_charge = #{actualMerchantDistCharge,jdbcType=VARCHAR}
		</if>
		<if test="saleGrossProfit != null and '' != saleGrossProfit">  
			and sale_gross_profit = #{saleGrossProfit,jdbcType=VARCHAR}
		</if>
		<if test="saleGrossProfitRate != null and '' != saleGrossProfitRate">  
			and sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		</if>
		<if test="distPrice != null and '' != distPrice">  
			and dist_price = #{distPrice,jdbcType=VARCHAR}
		</if>
		<if test="distAll != null and '' != distAll">  
			and dist_all = #{distAll,jdbcType=VARCHAR}
		</if>
		<if test="distDiff != null and '' != distDiff">  
			and dist_diff = #{distDiff,jdbcType=VARCHAR}
		</if>
		<if test="serviceAll != null and '' != serviceAll">  
			and service_all = #{serviceAll,jdbcType=VARCHAR}
		</if>
		<if test="profitAll != null and '' != profitAll">  
			and profit_all = #{profitAll,jdbcType=VARCHAR}
		</if>
		<if test="otherAll != null and '' != otherAll">  
			and other_all = #{otherAll,jdbcType=VARCHAR}
		</if>
		<if test="allbasePrice != null and '' != allbasePrice">  
			and allbase_price = #{allbasePrice,jdbcType=VARCHAR}
		</if>
		<if test="allotherBasePrice != null and '' != allotherBasePrice">  
			and allother_base_price = #{allotherBasePrice,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and '' != remark">  
			and remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="platformType != null and '' != platformType">  
			and platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
				<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
         	</if>
	</select>
	
	
	<!--删除底价运营数据 -->	
	<delete id="deleteBasePriceByOrderDetail" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		delete from opera_date_base_price
		where id like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
			]]>
		</if> 
		<if test="platformType != null and '' != platformType">  
			and platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
	</delete>
	<!--删除深运营数据 -->	
	<delete id="deleteDeepOperaByOrderDetail" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		delete from opera_date_deep_opera
		where id like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
			]]>
		</if> 
		<if test="platformType != null and '' != platformType">  
			and platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
	</delete>
	<!--删除销售额抽佣运营数据 -->	
	<delete id="deleteSaleRateByOrderDetail" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		delete from opera_date_sale_rate
		where id like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
			]]>
		</if> 
		<if test="platformType != null and '' != platformType">  
			and platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
	</delete>
	<!--删除平台到账抽佣运营数据 -->	
	<delete id="deletePlatformAccountByOrderDetail" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		delete from opera_date_platform_account
		where id like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
			]]>
		</if> 
		<if test="platformType != null and '' != platformType">  
			and platform_type = #{platformType,jdbcType=VARCHAR}
		</if>
	</delete>
	
	<!-- 根据订单详细生成底价抽佣运营表 -->
	<insert id="addBasePriceByOrderDetail" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		insert into opera_date_base_price (
		<include refid="Base_Column_List" />
		)(
			SELECT
				CONCAT(od.create_date,od.store_name) as id,
				od.store_id as store_id,
				od.store_name as store_name,
				od.create_date as create_date,
				sum(od.is_invalid) AS invalid_num,
				COUNT(*) - sum(od.is_invalid) AS valid_num,
				sum(od.goods_quality) AS goods_quality,
				sum(od.orgin_price) as orgin_price,
				sum(od.meal_fee) as meal_fee,
				sum(sp.PRODUCT_UNIT_PRICE) as special_orgin,
				sum(sp.special_offer) as special_offer,
				sum(od.activities_subsidy_bymerchant) as activities_subsidy_bymerchant,
				sum(od.order_dist_charge) as order_dist_charge,
				sum(od.platform_dist_charge) as platform_dist_charge,
				sum(od.merchant_dist_charge) as cyz_dist_charge,
				sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant) as activities_subsidy_bycompany,
				sum(od.platform_activities_subsidies) AS platform_activities_charge,
				sum(od.service_charge) as platform_service_charge,
				sum(od.orgin_price)+ sum(od.meal_fee) as product_sale_amount,
				sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)-sum(od.service_charge)-sum(od.platform_dist_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))+sum(od.merchant_dist_charge) AS	amount_receivable,
				0 as order_sale_rate,
				0 as amount_rate_payable,
				sum(sp.special_offer) + 0 as amount_payable,
				sum(od.orgin_price)+sum(od.meal_fee)-(sum(sp.special_offer) + 0) as cyz_service_charge,
				0 as cyz_service_charge_industry_part,
				0 as cyz_service_charge_opera_part,
				sum(od.actual_merchant_dist_charge) AS actual_merchant_dist_charge,
				sum(od.orgin_price)+sum(od.meal_fee)+ sum(od.order_dist_charge)-sum(od.service_charge)-sum(od.platform_dist_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))+sum(od.merchant_dist_charge)- (sum(sp.special_offer) + 0) 
				as sale_gross_profit,
				(sum(od.orgin_price)+sum(od.meal_fee)+ sum(od.order_dist_charge)-sum(od.service_charge)-sum(od.platform_dist_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))+sum(od.merchant_dist_charge)- (sum(sp.special_offer) + 0))/
				(sum(od.orgin_price)+sum(od.meal_fee)-(sum(sp.special_offer) + 0))
				as sale_gross_profit_rate,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5
					ELSE 7.5 END ) AS dist_price,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5 
					ELSE 7.5 END ) * (COUNT(*) - sum(od.is_invalid)) AS dist_all,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5
					ELSE 7.5 END) * (COUNT(*) - sum(od.is_invalid)) - sum(od.actual_merchant_dist_charge) AS dist_diff,
				sum(od.platform_activities_subsidies) *0.4 as service_all,
				0 as profit_all,
				0 AS other_all,
				sum(sp.special_offer) as allbase_price,
				0 as allother_base_price, 
				od.remark,
				od.platform_type
			FROM
				account_order_detail AS od
			LEFT JOIN dn_store AS s ON s.elm_id = od.store_ELM_id
			LEFT JOIN store_product AS sp ON sp.store_id = s.STORE_ID
			AND FIND_IN_SET(
				sp.product_name,
				od.goods_name
			) > 0
			WHERE
				1 = 1
			<if test="null != propsMap.startDate and propsMap.startDate != ''">
				<![CDATA[
				and DATE_FORMAT(od.create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if>
			<if test="null != propsMap.endDate and propsMap.endDate != ''">
				<![CDATA[
				and DATE_FORMAT(od.create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if> 
			<if test="storeId != null and '' != storeId">  
				and od.store_id = #{storeId,jdbcType=CHAR}
			</if>
			<if test="storeName != null and '' != storeName">  
				and od.store_name = #{storeName,jdbcType=VARCHAR}
			</if>
			GROUP BY
				create_date,store_name
		)
	</insert>
	<!-- 根据订单详细生成销售额抽佣运营表 -->
	<insert id="addSaleRateByOrderDetail" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		insert into opera_date_sale_rate (
		<include refid="Base_Column_List" />
		)(
			SELECT
				CONCAT(od.create_date,od.store_name) as id,
				od.store_id as store_id,
				od.store_name as store_name,
				od.create_date as create_date,
				sum(od.is_invalid) AS invalid_num,
				COUNT(*) - sum(od.is_invalid) AS valid_num,
				sum(od.goods_quality) AS goods_quality,
				sum(od.orgin_price) as orgin_price,
				sum(od.meal_fee) as meal_fee,
				sum(sp.PRODUCT_UNIT_PRICE) as special_orgin,
				sum(sp.special_offer) as special_offer,
				sum(od.activities_subsidy_bymerchant) as activities_subsidy_bymerchant,
				sum(od.order_dist_charge) as order_dist_charge,
				sum(od.platform_dist_charge) as platform_dist_charge,
				sum(od.merchant_dist_charge) as cyz_dist_charge,
				sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant) as activities_subsidy_bycompany,
				sum(od.platform_activities_subsidies) AS platform_activities_charge,
				sum(od.service_charge) as platform_service_charge,
				sum(od.orgin_price)+ sum(od.meal_fee)- sum(od.activities_subsidy_bymerchant) as product_sale_amount,
				sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)- sum(od.activities_subsidy_bymerchant)
				-sum(od.platform_dist_charge)+sum(od.merchant_dist_charge)-sum(od.service_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant)) AS amount_receivable,
				0.7 as order_sale_rate,
				0.7*(sum(od.orgin_price)+ sum(od.meal_fee)-sum(sp.PRODUCT_UNIT_PRICE)) as amount_rate_payable,
				0.7*(sum(od.orgin_price)+ sum(od.meal_fee)-sum(sp.PRODUCT_UNIT_PRICE))+sum(sp.special_offer) as amount_payable,
				0.3*(sum(od.orgin_price)+ sum(od.meal_fee)-sum(sp.PRODUCT_UNIT_PRICE)) as cyz_service_charge,
				0 as cyz_service_charge_industry_part,
				0 as cyz_service_charge_opera_part,
				sum(od.actual_merchant_dist_charge) AS actual_merchant_dist_charge,
				sum(od.orgin_price)+ sum(od.meal_fee)- sum(od.activities_subsidy_bymerchant)-(sum(od.merchant_activities_subsidies) - 
				sum(od.activities_subsidy_bymerchant))-sum(od.service_charge) -
				(0.7*(sum(od.orgin_price)+ sum(od.meal_fee)-sum(sp.PRODUCT_UNIT_PRICE))+sum(sp.special_offer)) as sale_gross_profit,
				sum(od.orgin_price)+ sum(od.meal_fee)- sum(od.activities_subsidy_bymerchant)-(sum(od.merchant_activities_subsidies) - 
				sum(od.activities_subsidy_bymerchant))-sum(od.service_charge) -
				(0.7*(sum(od.orgin_price)+ sum(od.meal_fee)-sum(sp.PRODUCT_UNIT_PRICE))+sum(sp.special_offer))/
				(0.3*(sum(od.orgin_price)+ sum(od.meal_fee)-sum(sp.PRODUCT_UNIT_PRICE)))
				as sale_gross_profit_rate,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5
					ELSE 7.5 END ) AS dist_price,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5 
					ELSE 7.5 END ) * (COUNT(*) - sum(od.is_invalid)) AS dist_all,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5
					ELSE 7.5 END) * (COUNT(*) - sum(od.is_invalid)) - sum(od.actual_merchant_dist_charge) AS dist_diff,
				sum(od.platform_activities_subsidies) *0.4 as service_all,
				0 as profit_all,
				0 AS other_all,
				sum(sp.special_offer) as allbase_price,
				0 as allother_base_price, 
				od.remark,
				od.platform_type
			FROM
				account_order_detail AS od
			LEFT JOIN dn_store AS s ON s.elm_id = od.store_ELM_id
			LEFT JOIN store_product AS sp ON sp.store_id = s.STORE_ID
			AND FIND_IN_SET(
				sp.product_name,
				od.goods_name
			) > 0
			WHERE
				1 = 1
			<if test="null != propsMap.startDate and propsMap.startDate != ''">
				<![CDATA[
				and DATE_FORMAT(od.create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if>
			<if test="null != propsMap.endDate and propsMap.endDate != ''">
				<![CDATA[
				and DATE_FORMAT(od.create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if> 
			<if test="storeId != null and '' != storeId">  
				and od.store_id = #{storeId,jdbcType=CHAR}
			</if>
			<if test="storeName != null and '' != storeName">  
				and od.store_name like CONCAT('%',#{storeName,jdbcType=VARCHAR},'%') 
			</if>
			<if test="platformType != null and '' != platformType">  
				and od.platform_type  = #{platformType,jdbcType=VARCHAR}
			</if>
			GROUP BY
				create_date,store_name
		)
	</insert>
	<!-- 根据订单详细生成平台到账抽佣运营表 -->
	<insert id="addPlatformAccountByOrderDetail" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		insert into opera_date_platform_account (
		<include refid="Base_Column_List" />
		)(
			SELECT
				CONCAT(od.create_date,od.store_name) as id,
				od.store_id as store_id,
				od.store_name as store_name,
				od.create_date as create_date,
				sum(od.is_invalid) AS invalid_num,
				COUNT(*) - sum(od.is_invalid) AS valid_num,
				sum(od.goods_quality) AS goods_quality,
				sum(od.orgin_price) as orgin_price,
				sum(od.meal_fee) as meal_fee,
				sum(sp.PRODUCT_UNIT_PRICE) as special_orgin,
				sum(sp.special_offer) as special_offer,
				sum(od.activities_subsidy_bymerchant) as activities_subsidy_bymerchant,
				sum(od.order_dist_charge) as order_dist_charge,
				sum(od.platform_dist_charge) as platform_dist_charge,
				sum(od.merchant_dist_charge) as cyz_dist_charge,
				sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant) as activities_subsidy_bycompany,
				sum(od.platform_activities_subsidies) AS platform_activities_charge,
				sum(od.service_charge) as platform_service_charge,
				sum(od.orgin_price)+ sum(od.meal_fee)- sum(od.activities_subsidy_bymerchant) as product_sale_amount,
				sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)- sum(od.activities_subsidy_bymerchant)
				-sum(od.platform_dist_charge)+sum(od.merchant_dist_charge)-sum(od.service_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant)) AS amount_receivable,
				0.95 as order_sale_rate,
				0.95*(sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)- sum(od.activities_subsidy_bymerchant)
				-sum(od.platform_dist_charge)+sum(od.merchant_dist_charge)-sum(od.service_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))-sum(sp.PRODUCT_UNIT_PRICE)) as amount_rate_payable,
				0.95*(sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)- sum(od.activities_subsidy_bymerchant)
				-sum(od.platform_dist_charge)+sum(od.merchant_dist_charge)-sum(od.service_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))-sum(sp.PRODUCT_UNIT_PRICE))+sum(sp.special_offer) as amount_payable,
				0.05*(sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)- sum(od.activities_subsidy_bymerchant)
				-sum(od.platform_dist_charge)+sum(od.merchant_dist_charge)-sum(od.service_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))-sum(sp.PRODUCT_UNIT_PRICE)) as cyz_service_charge,
				0 as cyz_service_charge_industry_part,
				0 as cyz_service_charge_opera_part,
				sum(od.actual_merchant_dist_charge) AS actual_merchant_dist_charge,
				sum(od.orgin_price)+ sum(od.meal_fee)- sum(od.activities_subsidy_bymerchant)-(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))-sum(od.service_charge) -
					(0.95*(sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)- sum(od.activities_subsidy_bymerchant)
					-sum(od.platform_dist_charge)+sum(od.merchant_dist_charge)-sum(od.service_charge)-
					(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))-sum(sp.PRODUCT_UNIT_PRICE))+sum(sp.special_offer)) as sale_gross_profit,
				sum(od.orgin_price)+ sum(od.meal_fee)- sum(od.activities_subsidy_bymerchant)-(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))-sum(od.service_charge) -
					(0.95*(sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)- sum(od.activities_subsidy_bymerchant)
					-sum(od.platform_dist_charge)+sum(od.merchant_dist_charge)-sum(od.service_charge)-
					(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))-sum(sp.PRODUCT_UNIT_PRICE))+sum(sp.special_offer))/
				(0.05*(sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)- sum(od.activities_subsidy_bymerchant)
				-sum(od.platform_dist_charge)+sum(od.merchant_dist_charge)-sum(od.service_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))-sum(sp.PRODUCT_UNIT_PRICE)))
				as sale_gross_profit_rate,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5
					ELSE 7.5 END ) AS dist_price,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5 
					ELSE 7.5 END ) * (COUNT(*) - sum(od.is_invalid)) AS dist_all,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5
					ELSE 7.5 END) * (COUNT(*) - sum(od.is_invalid)) - sum(od.actual_merchant_dist_charge) AS dist_diff,
				sum(od.platform_activities_subsidies) *0.4 as service_all,
				0 as profit_all,
				0 AS other_all,
				sum(sp.special_offer) as allbase_price,
				0 as allother_base_price, 
				od.remark,
				od.platform_type
			FROM
				account_order_detail AS od
			LEFT JOIN dn_store AS s ON s.elm_id = od.store_ELM_id
			LEFT JOIN store_product AS sp ON sp.store_id = s.STORE_ID
			AND FIND_IN_SET(
				sp.product_name,
				od.goods_name
			) > 0
			WHERE
				1 = 1
			<if test="null != propsMap.startDate and propsMap.startDate != ''">
				<![CDATA[
				and DATE_FORMAT(od.create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if>
			<if test="null != propsMap.endDate and propsMap.endDate != ''">
				<![CDATA[
				and DATE_FORMAT(od.create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if> 
			<if test="storeId != null and '' != storeId">  
				and od.store_id = #{storeId,jdbcType=CHAR}
			</if>
			<if test="storeName != null and '' != storeName">  
				and od.store_name = #{storeName,jdbcType=VARCHAR}
			</if>
			GROUP BY
				create_date,store_name
		)
	</insert>
	<!-- 根据订单详细生成深运营表 -->
	<insert id="addDeepOperaByOrderDetail" parameterType="com.dongnao.workbench.finance.model.AccountOrderDetail">
		insert into opera_date_deep_opera (
		<include refid="Base_Column_List" />
		)(
			SELECT
				CONCAT(od.create_date,od.store_name) as id,
				od.store_id as store_id,
				od.store_name as store_name,
				od.create_date as create_date,
				sum(od.is_invalid) AS invalid_num,
				COUNT(*) - sum(od.is_invalid) AS valid_num,
				sum(od.goods_quality) AS goods_quality,
				sum(od.orgin_price) as orgin_price,
				sum(od.meal_fee) as meal_fee,
				sum(sp.PRODUCT_UNIT_PRICE) as special_orgin,
				sum(sp.special_offer) as special_offer,
				sum(od.activities_subsidy_bymerchant) as activities_subsidy_bymerchant,
				sum(od.order_dist_charge) as order_dist_charge,
				sum(od.platform_dist_charge) as platform_dist_charge,
				sum(od.merchant_dist_charge) as cyz_dist_charge,
				sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant) as activities_subsidy_bycompany,
				sum(od.platform_activities_subsidies) AS platform_activities_charge,
				sum(od.service_charge) as platform_service_charge,
				sum(od.orgin_price)+ sum(od.meal_fee) as product_sale_amount,
				sum(od.orgin_price)+ sum(od.meal_fee)+ sum(od.order_dist_charge)-sum(od.service_charge)-sum(od.platform_dist_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))+sum(od.merchant_dist_charge) AS	amount_receivable,
				0 as order_sale_rate,
				0 as amount_rate_payable,
				sum(sp.special_offer) + 0 as amount_payable,
				sum(od.orgin_price)+sum(od.meal_fee)-(sum(sp.special_offer) + 0) as cyz_service_charge,
				0 as cyz_service_charge_industry_part,
				0 as cyz_service_charge_opera_part,
				sum(od.actual_merchant_dist_charge) AS actual_merchant_dist_charge,
				sum(od.orgin_price)+sum(od.meal_fee)+ sum(od.order_dist_charge)-sum(od.service_charge)-sum(od.platform_dist_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))+sum(od.merchant_dist_charge)- (sum(sp.special_offer) + 0) 
				as sale_gross_profit,
				(sum(od.orgin_price)+sum(od.meal_fee)+ sum(od.order_dist_charge)-sum(od.service_charge)-sum(od.platform_dist_charge)-
				(sum(od.merchant_activities_subsidies) - sum(od.activities_subsidy_bymerchant))+sum(od.merchant_dist_charge)- (sum(sp.special_offer) + 0))/
				(sum(od.orgin_price)+sum(od.meal_fee)-(sum(sp.special_offer) + 0))
				as sale_gross_profit_rate,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5
					ELSE 7.5 END ) AS dist_price,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5 
					ELSE 7.5 END ) * (COUNT(*) - sum(od.is_invalid)) AS dist_all,
				(CASE WHEN s.WORK_TIME_BEGIN > '20:00:00' THEN 12.5
					ELSE 7.5 END) * (COUNT(*) - sum(od.is_invalid)) - sum(od.actual_merchant_dist_charge) AS dist_diff,
				sum(od.platform_activities_subsidies) *0.4 as service_all,
				0 as profit_all,
				0 AS other_all,
				sum(sp.special_offer) as allbase_price,
				0 as allother_base_price, 
				od.remark,
				od.platform_type
			FROM
				account_order_detail AS od
			LEFT JOIN dn_store AS s ON s.elm_id = od.store_ELM_id
			LEFT JOIN store_product AS sp ON sp.store_id = s.STORE_ID
			AND FIND_IN_SET(
				sp.product_name,
				od.goods_name
			) > 0
			WHERE
				1 = 1
			<if test="null != propsMap.startDate and propsMap.startDate != ''">
				<![CDATA[
				and DATE_FORMAT(od.create_date,'%Y-%c-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if>
			<if test="null != propsMap.endDate and propsMap.endDate != ''">
				<![CDATA[
				and DATE_FORMAT(od.create_date,'%Y-%c-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=DATE},'%Y-%c-%d')
				]]>
			</if> 
			<if test="storeId != null and '' != storeId">  
				and od.store_id = #{storeId,jdbcType=CHAR}
			</if>
			<if test="storeName != null and '' != storeName">  
				and od.store_name = #{storeName,jdbcType=VARCHAR}
			</if>
			GROUP BY
				create_date,store_name
		)
	</insert>
	
	<!-- 插入一条底价运营数据 -->	
	<insert id="add" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		insert into opera_date_base_price (
		<include refid="Base_Column_List" />
		)values (
			#{id,jdbcType=VARCHAR}
			,#{storeId,jdbcType=VARCHAR}
			,#{storeName,jdbcType=VARCHAR}
			,#{createDate,jdbcType=TIMESTAMP}
			,#{invalidNum,jdbcType=INTEGER}
			,#{validNum,jdbcType=INTEGER}
			,#{goodsQuality,jdbcType=VARCHAR}
			,#{orginPrice,jdbcType=VARCHAR}
			,#{mealFee,jdbcType=VARCHAR}
			,#{specialOrgin,jdbcType=VARCHAR}
			,#{specialOffer,jdbcType=VARCHAR}
			,#{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
			,#{orderDistCharge,jdbcType=VARCHAR}
			,#{platformDistCharge,jdbcType=VARCHAR}
			,#{cyzDistCharge,jdbcType=VARCHAR}
			,#{activitiesSubsidyBycompany,jdbcType=VARCHAR}
			,#{platformActivitiesCharge,jdbcType=VARCHAR}
			,#{platformServiceCharge,jdbcType=VARCHAR}
			,#{productSaleAmount,jdbcType=VARCHAR}
			,#{amountReceivable,jdbcType=VARCHAR}
			,#{orderSaleRate,jdbcType=VARCHAR}
			,#{amountRatePayable,jdbcType=VARCHAR}
			,#{amountPayable,jdbcType=VARCHAR}
			,#{cyzServiceCharge,jdbcType=VARCHAR}
			,#{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
			,#{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
			,#{actualMerchantDistCharge,jdbcType=VARCHAR}
			,#{saleGrossProfit,jdbcType=VARCHAR}
			,#{saleGrossProfitRate,jdbcType=VARCHAR}
			,#{distPrice,jdbcType=VARCHAR}
			,#{distAll,jdbcType=VARCHAR}
			,#{distDiff,jdbcType=VARCHAR}
			,#{serviceAll,jdbcType=VARCHAR}
			,#{profitAll,jdbcType=VARCHAR}
			,#{otherAll,jdbcType=VARCHAR}
			,#{allbasePrice,jdbcType=VARCHAR}
			,#{allotherBasePrice,jdbcType=VARCHAR}
			,#{remark,jdbcType=VARCHAR}
			,#{platformType,jdbcType=VARCHAR}
		)
	</insert>
	
	<!--更新一条底价抽佣运营数据 -->	
	<update id="updateBasePrice" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		update opera_date_base_price  set
		id= #{id,jdbcType=VARCHAR}
		,store_id = #{storeId,jdbcType=VARCHAR}
		,store_name = #{storeName,jdbcType=VARCHAR}
		,create_date = #{createDate,jdbcType=TIMESTAMP}
		,invalid_num = #{invalidNum,jdbcType=INTEGER}
		,valid_num = #{validNum,jdbcType=INTEGER}
		,goods_quality = #{goodsQuality,jdbcType=VARCHAR}
		,orgin_price = #{orginPrice,jdbcType=VARCHAR}
		,meal_fee = #{mealFee,jdbcType=VARCHAR}
		,special_orgin = #{specialOrgin,jdbcType=VARCHAR}
		,special_offer = #{specialOffer,jdbcType=VARCHAR}
		,activities_subsidy_bymerchant = #{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
		,order_dist_charge = #{orderDistCharge,jdbcType=VARCHAR}
		,platform_dist_charge = #{platformDistCharge,jdbcType=VARCHAR}
		,cyz_dist_charge = #{cyzDistCharge,jdbcType=VARCHAR}
		,activities_subsidy_bycompany = #{activitiesSubsidyBycompany,jdbcType=VARCHAR}
		,platform_activities_charge = #{platformActivitiesCharge,jdbcType=VARCHAR}
		,platform_service_charge = #{platformServiceCharge,jdbcType=VARCHAR}
		,product_sale_amount = #{productSaleAmount,jdbcType=VARCHAR}
		,amount_receivable = #{amountReceivable,jdbcType=VARCHAR}
		,order_sale_rate = #{orderSaleRate,jdbcType=VARCHAR}
		,amount_rate_payable = #{amountRatePayable,jdbcType=VARCHAR}
		,amount_payable = #{amountPayable,jdbcType=VARCHAR}
		,cyz_service_charge = #{cyzServiceCharge,jdbcType=VARCHAR}
		,cyz_service_charge_industry_part = #{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
		,cyz_service_charge_opera_part = #{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
		,actual_merchant_dist_charge = #{actualMerchantDistCharge,jdbcType=VARCHAR}
		,sale_gross_profit = #{saleGrossProfit,jdbcType=VARCHAR}
		,sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		,dist_price = #{distPrice,jdbcType=VARCHAR}
		,dist_all = #{distAll,jdbcType=VARCHAR}
		,dist_diff = #{distDiff,jdbcType=VARCHAR}
		,service_all = #{serviceAll,jdbcType=VARCHAR}
		,profit_all = #{profitAll,jdbcType=VARCHAR}
		,other_all = #{otherAll,jdbcType=VARCHAR}
		,allbase_price = #{allbasePrice,jdbcType=VARCHAR}
		,allother_base_price = #{allotherBasePrice,jdbcType=VARCHAR}
		,remark = #{remark,jdbcType=VARCHAR}
		,platform_type = #{platformType,jdbcType=VARCHAR}
	where id = #{id,jdbcType=VARCHAR}
	</update>
	<!--更新一条销售额抽佣运营数据 -->	
	<update id="updateSaleRate" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		update opera_date_sale_rate  set
		id= #{id,jdbcType=VARCHAR}
		,store_id = #{storeId,jdbcType=VARCHAR}
		,store_name = #{storeName,jdbcType=VARCHAR}
		,create_date = #{createDate,jdbcType=TIMESTAMP}
		,invalid_num = #{invalidNum,jdbcType=INTEGER}
		,valid_num = #{validNum,jdbcType=INTEGER}
		,goods_quality = #{goodsQuality,jdbcType=VARCHAR}
		,orgin_price = #{orginPrice,jdbcType=VARCHAR}
		,meal_fee = #{mealFee,jdbcType=VARCHAR}
		,special_orgin = #{specialOrgin,jdbcType=VARCHAR}
		,special_offer = #{specialOffer,jdbcType=VARCHAR}
		,activities_subsidy_bymerchant = #{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
		,order_dist_charge = #{orderDistCharge,jdbcType=VARCHAR}
		,platform_dist_charge = #{platformDistCharge,jdbcType=VARCHAR}
		,cyz_dist_charge = #{cyzDistCharge,jdbcType=VARCHAR}
		,activities_subsidy_bycompany = #{activitiesSubsidyBycompany,jdbcType=VARCHAR}
		,platform_activities_charge = #{platformActivitiesCharge,jdbcType=VARCHAR}
		,platform_service_charge = #{platformServiceCharge,jdbcType=VARCHAR}
		,product_sale_amount = #{productSaleAmount,jdbcType=VARCHAR}
		,amount_receivable = #{amountReceivable,jdbcType=VARCHAR}
		,order_sale_rate = #{orderSaleRate,jdbcType=VARCHAR}
		,amount_rate_payable = #{amountRatePayable,jdbcType=VARCHAR}
		,amount_payable = #{amountPayable,jdbcType=VARCHAR}
		,cyz_service_charge = #{cyzServiceCharge,jdbcType=VARCHAR}
		,cyz_service_charge_industry_part = #{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
		,cyz_service_charge_opera_part = #{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
		,actual_merchant_dist_charge = #{actualMerchantDistCharge,jdbcType=VARCHAR}
		,sale_gross_profit = #{saleGrossProfit,jdbcType=VARCHAR}
		,sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		,dist_price = #{distPrice,jdbcType=VARCHAR}
		,dist_all = #{distAll,jdbcType=VARCHAR}
		,dist_diff = #{distDiff,jdbcType=VARCHAR}
		,service_all = #{serviceAll,jdbcType=VARCHAR}
		,profit_all = #{profitAll,jdbcType=VARCHAR}
		,other_all = #{otherAll,jdbcType=VARCHAR}
		,allbase_price = #{allbasePrice,jdbcType=VARCHAR}
		,allother_base_price = #{allotherBasePrice,jdbcType=VARCHAR}
		,remark = #{remark,jdbcType=VARCHAR}
		,platform_type = #{platformType,jdbcType=VARCHAR}
	where id = #{id,jdbcType=VARCHAR}
	</update>
	<!--更新一条平台到账抽佣运营数据 -->	
	<update id="updatePlatformAccount" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		update opera_date_platform_account  set
		id= #{id,jdbcType=VARCHAR}
		,store_id = #{storeId,jdbcType=VARCHAR}
		,store_name = #{storeName,jdbcType=VARCHAR}
		,create_date = #{createDate,jdbcType=TIMESTAMP}
		,invalid_num = #{invalidNum,jdbcType=INTEGER}
		,valid_num = #{validNum,jdbcType=INTEGER}
		,goods_quality = #{goodsQuality,jdbcType=VARCHAR}
		,orgin_price = #{orginPrice,jdbcType=VARCHAR}
		,meal_fee = #{mealFee,jdbcType=VARCHAR}
		,special_orgin = #{specialOrgin,jdbcType=VARCHAR}
		,special_offer = #{specialOffer,jdbcType=VARCHAR}
		,activities_subsidy_bymerchant = #{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
		,order_dist_charge = #{orderDistCharge,jdbcType=VARCHAR}
		,platform_dist_charge = #{platformDistCharge,jdbcType=VARCHAR}
		,cyz_dist_charge = #{cyzDistCharge,jdbcType=VARCHAR}
		,activities_subsidy_bycompany = #{activitiesSubsidyBycompany,jdbcType=VARCHAR}
		,platform_activities_charge = #{platformActivitiesCharge,jdbcType=VARCHAR}
		,platform_service_charge = #{platformServiceCharge,jdbcType=VARCHAR}
		,product_sale_amount = #{productSaleAmount,jdbcType=VARCHAR}
		,amount_receivable = #{amountReceivable,jdbcType=VARCHAR}
		,order_sale_rate = #{orderSaleRate,jdbcType=VARCHAR}
		,amount_rate_payable = #{amountRatePayable,jdbcType=VARCHAR}
		,amount_payable = #{amountPayable,jdbcType=VARCHAR}
		,cyz_service_charge = #{cyzServiceCharge,jdbcType=VARCHAR}
		,cyz_service_charge_industry_part = #{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
		,cyz_service_charge_opera_part = #{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
		,actual_merchant_dist_charge = #{actualMerchantDistCharge,jdbcType=VARCHAR}
		,sale_gross_profit = #{saleGrossProfit,jdbcType=VARCHAR}
		,sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		,dist_price = #{distPrice,jdbcType=VARCHAR}
		,dist_all = #{distAll,jdbcType=VARCHAR}
		,dist_diff = #{distDiff,jdbcType=VARCHAR}
		,service_all = #{serviceAll,jdbcType=VARCHAR}
		,profit_all = #{profitAll,jdbcType=VARCHAR}
		,other_all = #{otherAll,jdbcType=VARCHAR}
		,allbase_price = #{allbasePrice,jdbcType=VARCHAR}
		,allother_base_price = #{allotherBasePrice,jdbcType=VARCHAR}
		,remark = #{remark,jdbcType=VARCHAR}
		,platform_type = #{platformType,jdbcType=VARCHAR}
	where id = #{id,jdbcType=VARCHAR}
	</update>
	<!--更新一条深运营数据 -->	
	<update id="updateDeepOpera" parameterType="com.dongnao.workbench.finance.model.OperaDate">
		update opera_date_deep_opera  set
		id= #{id,jdbcType=VARCHAR}
		,store_id = #{storeId,jdbcType=VARCHAR}
		,store_name = #{storeName,jdbcType=VARCHAR}
		,create_date = #{createDate,jdbcType=TIMESTAMP}
		,invalid_num = #{invalidNum,jdbcType=INTEGER}
		,valid_num = #{validNum,jdbcType=INTEGER}
		,goods_quality = #{goodsQuality,jdbcType=VARCHAR}
		,orgin_price = #{orginPrice,jdbcType=VARCHAR}
		,meal_fee = #{mealFee,jdbcType=VARCHAR}
		,special_orgin = #{specialOrgin,jdbcType=VARCHAR}
		,special_offer = #{specialOffer,jdbcType=VARCHAR}
		,activities_subsidy_bymerchant = #{activitiesSubsidyBymerchant,jdbcType=VARCHAR}
		,order_dist_charge = #{orderDistCharge,jdbcType=VARCHAR}
		,platform_dist_charge = #{platformDistCharge,jdbcType=VARCHAR}
		,cyz_dist_charge = #{cyzDistCharge,jdbcType=VARCHAR}
		,activities_subsidy_bycompany = #{activitiesSubsidyBycompany,jdbcType=VARCHAR}
		,platform_activities_charge = #{platformActivitiesCharge,jdbcType=VARCHAR}
		,platform_service_charge = #{platformServiceCharge,jdbcType=VARCHAR}
		,product_sale_amount = #{productSaleAmount,jdbcType=VARCHAR}
		,amount_receivable = #{amountReceivable,jdbcType=VARCHAR}
		,order_sale_rate = #{orderSaleRate,jdbcType=VARCHAR}
		,amount_rate_payable = #{amountRatePayable,jdbcType=VARCHAR}
		,amount_payable = #{amountPayable,jdbcType=VARCHAR}
		,cyz_service_charge = #{cyzServiceCharge,jdbcType=VARCHAR}
		,cyz_service_charge_industry_part = #{cyzServiceChargeIndustryPart,jdbcType=VARCHAR}
		,cyz_service_charge_opera_part = #{cyzServiceChargeOperaPart,jdbcType=VARCHAR}
		,actual_merchant_dist_charge = #{actualMerchantDistCharge,jdbcType=VARCHAR}
		,sale_gross_profit = #{saleGrossProfit,jdbcType=VARCHAR}
		,sale_gross_profit_rate = #{saleGrossProfitRate,jdbcType=VARCHAR}
		,dist_price = #{distPrice,jdbcType=VARCHAR}
		,dist_all = #{distAll,jdbcType=VARCHAR}
		,dist_diff = #{distDiff,jdbcType=VARCHAR}
		,service_all = #{serviceAll,jdbcType=VARCHAR}
		,profit_all = #{profitAll,jdbcType=VARCHAR}
		,other_all = #{otherAll,jdbcType=VARCHAR}
		,allbase_price = #{allbasePrice,jdbcType=VARCHAR}
		,allother_base_price = #{allotherBasePrice,jdbcType=VARCHAR}
		,remark = #{remark,jdbcType=VARCHAR}
		,platform_type = #{platformType,jdbcType=VARCHAR}
	where id = #{id,jdbcType=VARCHAR}
	</update>

</mapper>
